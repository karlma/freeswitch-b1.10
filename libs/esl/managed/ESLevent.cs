/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ESLevent : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ESLevent(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ESLevent obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ESLevent() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        ESLPINVOKE.delete_ESLevent(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_esl_event_t event {
    set {
      ESLPINVOKE.ESLevent_event_set(swigCPtr, SWIGTYPE_p_esl_event_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = ESLPINVOKE.ESLevent_event_get(swigCPtr);
      SWIGTYPE_p_esl_event_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_esl_event_t(cPtr, false);
      return ret;
    } 
  }

  public string serialized_string {
    set {
      ESLPINVOKE.ESLevent_serialized_string_set(swigCPtr, value);
    } 
    get {
      string ret = ESLPINVOKE.ESLevent_serialized_string_get(swigCPtr);
      return ret;
    } 
  }

  public int mine {
    set {
      ESLPINVOKE.ESLevent_mine_set(swigCPtr, value);
    } 
    get {
      int ret = ESLPINVOKE.ESLevent_mine_get(swigCPtr);
      return ret;
    } 
  }

  public ESLevent(string type, string subclass_name) : this(ESLPINVOKE.new_ESLevent__SWIG_0(type, subclass_name), true) {
  }

  public ESLevent(SWIGTYPE_p_esl_event_t wrap_me, int free_me) : this(ESLPINVOKE.new_ESLevent__SWIG_1(SWIGTYPE_p_esl_event_t.getCPtr(wrap_me), free_me), true) {
  }

  public ESLevent(ESLevent me) : this(ESLPINVOKE.new_ESLevent__SWIG_2(ESLevent.getCPtr(me)), true) {
  }

  public string serialize(string format) {
    string ret = ESLPINVOKE.ESLevent_serialize(swigCPtr, format);
    return ret;
  }

  public bool setPriority(SWIGTYPE_p_esl_priority_t priority) {
    bool ret = ESLPINVOKE.ESLevent_setPriority(swigCPtr, SWIGTYPE_p_esl_priority_t.getCPtr(priority));
    if (ESLPINVOKE.SWIGPendingException.Pending) throw ESLPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getHeader(string header_name) {
    string ret = ESLPINVOKE.ESLevent_getHeader(swigCPtr, header_name);
    return ret;
  }

  public string getBody() {
    string ret = ESLPINVOKE.ESLevent_getBody(swigCPtr);
    return ret;
  }

  public string getType() {
    string ret = ESLPINVOKE.ESLevent_getType(swigCPtr);
    return ret;
  }

  public bool addBody(string value) {
    bool ret = ESLPINVOKE.ESLevent_addBody(swigCPtr, value);
    return ret;
  }

  public bool addHeader(string header_name, string value) {
    bool ret = ESLPINVOKE.ESLevent_addHeader(swigCPtr, header_name, value);
    return ret;
  }

  public bool delHeader(string header_name) {
    bool ret = ESLPINVOKE.ESLevent_delHeader(swigCPtr, header_name);
    return ret;
  }

  public string firstHeader() {
    string ret = ESLPINVOKE.ESLevent_firstHeader(swigCPtr);
    return ret;
  }

  public string nextHeader() {
    string ret = ESLPINVOKE.ESLevent_nextHeader(swigCPtr);
    return ret;
  }

}
